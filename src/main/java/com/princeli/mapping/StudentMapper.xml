<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.princeli.dao.StudentMapper" >
  <resultMap id="BaseResultMap" type="com.princeli.model.Student" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="dateOfBirth" property="dateofbirth" jdbcType="TIMESTAMP" />
    <result column="emailAddress" property="emailaddress" jdbcType="VARCHAR" />
    <result column="firstName" property="firstname" jdbcType="VARCHAR" />
    <result column="lastName" property="lastname" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="userName" property="username" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, dateOfBirth, emailAddress, firstName, lastName, password, userName
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_student
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_student
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.princeli.model.Student" >
    insert into t_student (id, dateOfBirth, emailAddress, 
      firstName, lastName, password, 
      userName)
    values (#{id,jdbcType=BIGINT}, #{dateofbirth,jdbcType=TIMESTAMP}, #{emailaddress,jdbcType=VARCHAR}, 
      #{firstname,jdbcType=VARCHAR}, #{lastname,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.princeli.model.Student" >
    insert into t_student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="dateofbirth != null" >
        dateOfBirth,
      </if>
      <if test="emailaddress != null" >
        emailAddress,
      </if>
      <if test="firstname != null" >
        firstName,
      </if>
      <if test="lastname != null" >
        lastName,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="username != null" >
        userName,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="dateofbirth != null" >
        #{dateofbirth,jdbcType=TIMESTAMP},
      </if>
      <if test="emailaddress != null" >
        #{emailaddress,jdbcType=VARCHAR},
      </if>
      <if test="firstname != null" >
        #{firstname,jdbcType=VARCHAR},
      </if>
      <if test="lastname != null" >
        #{lastname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.princeli.model.Student" >
    update t_student
    <set >
      <if test="dateofbirth != null" >
        dateOfBirth = #{dateofbirth,jdbcType=TIMESTAMP},
      </if>
      <if test="emailaddress != null" >
        emailAddress = #{emailaddress,jdbcType=VARCHAR},
      </if>
      <if test="firstname != null" >
        firstName = #{firstname,jdbcType=VARCHAR},
      </if>
      <if test="lastname != null" >
        lastName = #{lastname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        userName = #{username,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.princeli.model.Student" >
    update t_student
    set dateOfBirth = #{dateofbirth,jdbcType=TIMESTAMP},
      emailAddress = #{emailaddress,jdbcType=VARCHAR},
      firstName = #{firstname,jdbcType=VARCHAR},
      lastName = #{lastname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      userName = #{username,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
    <select id="getStudentByUserName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_student
    where userName = #{userName,jdbcType=VARCHAR}
  </select>
  
  <select id="getStudentList"  resultMap="BaseResultMap" parameterType="map">
		select
		<include refid="Base_Column_List" />
		FROM t_student
		WHERE 1=1
			<if test="userName!=null and userName!=''">
				AND userName like '%#{userName}%'
			</if>
		limit #{startIndex},#{pageSize}
  </select>
	
  <select id="getStudentCount" resultType="java.lang.Integer" parameterType="map">
		SELECT COUNT(1)
		FROM t_student
		WHERE 1=1
		<if test="userName!=null and userName!=''">
			AND userName like '%#{userName}%'
		</if>
 </select>
  
</mapper>